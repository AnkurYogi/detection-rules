[metadata]
creation_date = "2022/03/21"
maturity = "production"
updated_date = "2022/03/21"

[rule]
author = ["Elastic"]
description = """
Detects the creation of a WMI Event Subscription. Attackers can abuse this mechanism for persistence or to
elevate to SYSTEM privileges.
"""
from = "now-9m"
index = ["winlogbeat-*", "logs-windows.*"]
language = "eql"
license = "Elastic License v2"
name = "Suspicious WMI Event Subscription Created"
note = """## Triage and analysis.

### Investigating Suspicious WMI Event Subscription

WMI (Windows Management Instrumentation) is one of the main Windows components for administration. Because of its
capability and variety of operations that can be executed, it is an attractive vector for attackers, which can abuse the
Event Subscription functionality to establish persistence, and in some cases, to escalate privileges to SYSTEM.

To enable the usage of this mechanism, three components are needed: A Event Filter, an Event Consumer, and a binding to connect the first two components.

This rule will monitor for the creation of the binding, as it needs to be created to abuse the Event Subscription.

#### Possible investigation steps:

- Identify the account that performed the action.
- Confirm whether the account owner is aware of the operation.
- Investigate other alerts related to the user in the last 48 hours.
- Identify the filter (`winlog.event_data.Filter`) and the consumer (`winlog.event_data.Consumer`).
- Investigate the created Event filter:
    - Search for Sysmon event 19 in the host and filter by the filter's name.
    - Run the `Get-WMIObject -Namespace root/Subscription -Class __EventFilter` command.
- Investigate the created Event Consumer:
    - Search for Sysmon event 20 in the host and filter by the consumer's name.
    - Run the `Get-WMIObject -Namespace root/Subscription -Class __EventConsumer` command.

### False Positive Analysis

- The mechanism can be used legitimately by Microsoft and third party programs, analyze the command line for suspicious
patterns and potentially malicious activities.

### Response and Remediation

- Initiate the incident response process based on the outcome of the triage.
- Isolate the involved host to prevent further post-compromise behavior.
- If the triage identified malware, search the environment for additional compromised hosts.
- Remove the components related to the malicious event subscription.
    - Guidance on removing these components can be found in this [blog post](https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96).
"""
references = [
  "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf",
  "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96",
]
risk_score = 47
rule_id = "e72f87d0-a70e-4f8d-8443-a6407bc34643"
severity = "medium"
tags = ["Elastic", "Host", "Windows", "Threat Detection", "Persistence"]
timestamp_override = "event.ingested"
type = "eql"

query = '''
any where event.dataset == "windows.sysmon_operational" and event.code == "21" and winlog.event_data.Operation : "Created"

// to limit to consumer types, add a similar line and replace CommandLineEventConsumer
// and winlog.event_data.Consumer : "*subscription:CommandLineEventConsumer*"
// or using between()
'''

[[rule.threat]]
framework = "MITRE ATT&CK"

[[rule.threat.technique]]
id = "T1546"
name = "Event Triggered Execution"
reference = "https://attack.mitre.org/techniques/T1546/"

    [[rule.threat.technique.subtechnique]]
    id = "T1546.003"
    name = "Windows Management Instrumentation Event Subscription"
    reference = "https://attack.mitre.org/techniques/T1546/003/"

[rule.threat.tactic]
id = "TA0003"
name = "Persistence"
reference = "https://attack.mitre.org/tactics/TA0003/"

